{"version":3,"sources":["Routes/Home.jsx","Components/Quiz/Progress.jsx","Components/Quiz/Question.jsx","Components/Quiz/Answer.jsx","Components/Quiz/Answers.jsx","Routes/Quiz.jsx","Routes/Error.jsx","Components/Admin/Category.jsx","Components/Admin/NewQuestion.jsx","Components/Admin/AnswerOptions.jsx","Components/Admin/CorrectAnswer.jsx","Routes/Admin.jsx","Components/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","dataCategories","className","map","category","key","id","to","style","background","img","backgroundSize","name","protoTypes","PropTypes","array","Progress","currentQuestion","total","Question","data","question","Answer","letter","answer","click","classes","isAnswerDisabled","icons","setSelected","onClick","disabled","Answers","setCurrentAnswer","currentAnswer","setIsDisabled","isDisabled","nextFunction","useState","setIsAnswerDisabled","selected","newAnswers","options","useEffect","option","getStatusClass","A","B","C","D","Quiz","setData","isError","setIsError","isLoading","setIsLoading","useParams","setCurrentQuestion","message","setMessage","answersUser","setAnswersUser","showResults","setShowResults","score","setScore","history","useHistory","Axios","get","then","response","console","log","catch","percentage","length","questionStatus","result","renderResultMark","renderResultsData","push","role","type","color","height","width","answerObject","Error","Category","setAddCategory","setCategoryId","renderInputNewCategory","onChange","e","target","value","NewQuestion","setQuestion","placeholder","AnswerOptions","setOptions","CorrectAnswer","setAnswer","Admin","isErrorCategories","isLoadingCategories","addCategory","categoryForm","setCategoryForm","categoryMessage","setCategoryMessage","categoryId","handleCategory","add","post","error","htmlFor","form","Navbar","App","setIsErrorCategories","setIsLoadingCategories","setDataCategories","NavBar","exact","path","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da9bb5fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Home = ({ dataCategories }) => {\r\n\r\n\r\n    return (dataCategories && (\r\n        <div className=\"home-container container\">\r\n\r\n            <h1 className=\"home-title\">QUIZ</h1>\r\n            <p className=\"home-subtitle\">Elige una categoría!</p>\r\n\r\n            {dataCategories.map(category => {\r\n                return (\r\n\r\n                    <Link\r\n                        className=\"home-category\"\r\n                        key={category.id}\r\n                        to={`/quiz/${category.id}`}\r\n                        style={{ background: `url(${category.img})`, backgroundSize: 'cover' }}>\r\n\r\n                        <p className=\"home-category-title\" > {category.name}</p>\r\n\r\n                    </Link>\r\n\r\n                )\r\n            })}\r\n\r\n\r\n        </div >\r\n    ))\r\n}\r\n\r\nHome.protoTypes = {\r\n    dataCategories: PropTypes.array\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Progress = ({ currentQuestion, total }) => {\r\n    return (\r\n        <>\r\n            <p className=\"quiz-subtitle\">Pregunta {currentQuestion}/{total}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nProgress.propTypes = {\r\n    currentQuestion: PropTypes.number,\r\n    total: PropTypes.number\r\n}\r\n\r\nexport default Progress\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Question = ({ currentQuestion, data }) => {\r\n\r\n    return (\r\n        <>\r\n            <h1>{data[currentQuestion].question}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nQuestion.propTypes = {\r\n    currentQuestion: PropTypes.number,\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default Question\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Answer = ({ letter, answer, click, classes, isAnswerDisabled, icons, setSelected }) => {\r\n\r\n    const handleClick = () => {\r\n        click();\r\n        setSelected(true);\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className={`answer ${classes}`}\r\n            onClick={handleClick}\r\n            disabled={isAnswerDisabled}>\r\n            <span>{`${letter}) `}</span>\r\n            {answer}\r\n            {icons}\r\n        </button>\r\n    )\r\n}\r\n\r\nAnswer.propTypes = {\r\n    letter: PropTypes.string,\r\n    click: PropTypes.func,\r\n    classes: PropTypes.string,\r\n    isAnswerDisabled: PropTypes.bool,\r\n    icons: PropTypes.object,\r\n    setSelected: PropTypes.func\r\n}\r\nexport default Answer\r\n","import React, { useState, useEffect } from 'react'\r\nimport Answer from './Answer'\r\nimport { FaRegDotCircle, FaRegCircle } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Answers = ({ currentQuestion, data, setCurrentAnswer, currentAnswer, setIsDisabled, isDisabled, nextFunction }) => {\r\n\r\n    const [isAnswerDisabled, setIsAnswerDisabled] = useState(false)\r\n    const [selected, setSelected] = useState(false);\r\n    const newAnswers = data[currentQuestion].options;\r\n    // console.log(newAnswers)\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentAnswer) {\r\n            setIsDisabled(false);\r\n            setIsAnswerDisabled(true);\r\n        }\r\n    }, [currentAnswer])\r\n\r\n    const icons = (option) => {\r\n\r\n        if ((selected) && (option === currentAnswer)) {\r\n            return <span><FaRegDotCircle /></span>\r\n        }\r\n        return <span><FaRegCircle /></span>\r\n\r\n    }\r\n\r\n\r\n    const getStatusClass = (option) => {\r\n        if (!currentAnswer) return \"\";\r\n        if (option === currentAnswer) {\r\n            return option === data[currentQuestion].answer ? \"correct\" : \"incorrect\";\r\n        }\r\n        return option === data[currentQuestion].answer ? \"correct\" : \"\";\r\n    }\r\n\r\n    const enableAnswers = () => {\r\n        setIsAnswerDisabled(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"quiz-answers-container\">\r\n                <Answer\r\n                    letter=\"A\"\r\n                    answer={newAnswers.A}\r\n                    click={() => setCurrentAnswer(\"A\")}\r\n                    classes={getStatusClass(\"A\")}\r\n                    isAnswerDisabled={isAnswerDisabled}\r\n                    setSelected={setSelected}\r\n                    icons={icons(\"A\")}\r\n                />\r\n                <Answer\r\n                    letter=\"B\"\r\n                    answer={newAnswers.B}\r\n                    click={() => setCurrentAnswer(\"B\")}\r\n                    classes={getStatusClass(\"B\")}\r\n                    isAnswerDisabled={isAnswerDisabled}\r\n                    setSelected={setSelected}\r\n                    icons={icons(\"B\")}\r\n                />\r\n                <Answer\r\n                    letter=\"C\"\r\n                    answer={newAnswers.C}\r\n                    click={() => setCurrentAnswer(\"C\")}\r\n                    classes={getStatusClass(\"C\")}\r\n                    isAnswerDisabled={isAnswerDisabled}\r\n                    setSelected={setSelected}\r\n                    icons={icons(\"C\")}\r\n                />\r\n                <Answer\r\n                    letter=\"D\"\r\n                    answer={newAnswers.D}\r\n                    click={() => setCurrentAnswer(\"D\")}\r\n                    classes={getStatusClass(\"D\")}\r\n                    isAnswerDisabled={isAnswerDisabled}\r\n                    setSelected={setSelected}\r\n                    icons={icons(\"D\")}\r\n                />\r\n            </div>\r\n            <button\r\n                className=\"quiz-btn btn\"\r\n                disabled={isDisabled}\r\n                onClick={() => {\r\n                    nextFunction();\r\n                    enableAnswers();\r\n                    setSelected(false);\r\n                }}>NEXT</button>\r\n        </>\r\n    )\r\n}\r\n\r\nAnswers.propTypes = {\r\n    currentQuestion: PropTypes.number,\r\n    data: PropTypes.array,\r\n    currentAnswer: PropTypes.string,\r\n    isDisabled: PropTypes.bool,\r\n    nextFunction: PropTypes.func,\r\n    setCurrentAnswer: PropTypes.func,\r\n    setIsDisabled: PropTypes.func\r\n}\r\n\r\nexport default Answers\r\n","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Progress from '../Components/Quiz/Progress';\r\nimport Question from '../Components/Quiz/Question';\r\nimport Answers from '../Components/Quiz/Answers';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { FaRegCheckCircle, FaTimesCircle } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Quiz = ({ dataCategories, data, setData, isError, setIsError, isLoading, setIsLoading }) => {\r\n    const { id } = useParams();\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [currentAnswer, setCurrentAnswer] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [answersUser, setAnswersUser] = useState([]);\r\n    const [showResults, setShowResults] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        setIsLoading(true);\r\n        setIsError(false);\r\n\r\n        Axios\r\n\r\n            .get(`https://5f280f4ef5d27e001612ea88.mockapi.io/categories/${id}/questions`)\r\n\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setData(response.data);\r\n                setIsLoading(false);\r\n            })\r\n\r\n            .catch(() => {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n            });\r\n    }, [id]);\r\n\r\n\r\n\r\n    const renderResultMark = (answer) => {\r\n\r\n        if (answer.result === 'correct') {\r\n            return <span className=\"results-icons\" ><FaRegCheckCircle /></span>;//Ok icon\r\n        } else {\r\n            return <span className=\"results-icons\" ><FaTimesCircle /></span>; //Failed icon\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const renderResultsData = () => {\r\n        const percentage = score / data.length * 100;\r\n\r\n        const detail = () => {\r\n            if (percentage < 50) {\r\n                return 'A Practicar!'\r\n            }\r\n            if (percentage > 50 && percentage < 60) {\r\n                return 'Regular'\r\n            } else {\r\n                return 'Muy Bien!'\r\n            }\r\n        }\r\n\r\n        const questionStatus = answersUser.map(answer => {\r\n            return (\r\n                <div key={answer.id} >\r\n                    <ul>\r\n                        <li className=\"answer\">\r\n                            Pregunta {answer.id} {renderResultMark(answer)}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {questionStatus}\r\n                <div className=\"results-score\">\r\n                    <h3>Puntaje</h3>\r\n                    <h3>{percentage}% - {detail()}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\n    const restart = () => {\r\n        setAnswersUser([]);\r\n        setCurrentAnswer('');\r\n        setCurrentQuestion(0);\r\n        setShowResults(false);\r\n    }\r\n\r\n    const next = () => {\r\n\r\n        const answerObject = {\r\n            id: data[currentQuestion].id,\r\n            answer: currentAnswer,\r\n            result: currentAnswer === data[currentQuestion].answer ? 'correct' : 'incorrect'\r\n        };\r\n\r\n        if (answerObject.result === 'correct') {\r\n            setScore(score + 1);\r\n        }\r\n\r\n        setAnswersUser([...answersUser, answerObject]);\r\n        console.log(answerObject)\r\n        setCurrentAnswer('');\r\n\r\n\r\n        if (!currentAnswer) {\r\n            setIsDisabled(true);\r\n            setMessage('Por favor, elija una opción');\r\n            return\r\n        } else {\r\n            setIsDisabled(false);\r\n            setMessage('');\r\n        }\r\n\r\n        if (currentQuestion + 1 < data.length) {\r\n            setCurrentQuestion(currentQuestion + 1)\r\n            return;\r\n        } else {\r\n            setShowResults(true)\r\n        }\r\n\r\n    }\r\n\r\n    if (showResults) {\r\n        return (\r\n            <div className=\"quiz-container container\">\r\n                <h1>Resultados</h1>\r\n                {renderResultsData()}\r\n                <button className=\"result-btn btn\" onClick={restart}>Reintentar</button>\r\n                <br />\r\n                <button className=\"result-btn btn\" onClick={() => history.push('/home')}>Home</button>\r\n            </div>\r\n        )\r\n    } else {\r\n\r\n        return (\r\n            <>\r\n                {isError && (\r\n                    <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                        Error 404: Not Found.\r\n                        API error: There was an error please refresh the page and try again.\r\n                    </div>\r\n                )}\r\n                <div className=\"quiz-container container\">\r\n\r\n\r\n\r\n                    {isLoading && (\r\n                        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n                    )}\r\n\r\n                    {dataCategories && (\r\n                        <>\r\n                            {dataCategories.map(category => {\r\n                                if (category.id === id) {\r\n                                    return (<h1 key={category.id} className=\"quiz-title\">{category.name}</h1>)\r\n                                }\r\n                            }\r\n                            )}\r\n                        </>\r\n                    )}\r\n\r\n\r\n                    {data && !isLoading && !isError && (\r\n\r\n                        <div>\r\n                            <Progress currentQuestion={currentQuestion + 1} total={data.length} />\r\n                            <Question currentQuestion={currentQuestion} data={data} />\r\n                            <Answers currentQuestion={currentQuestion} setCurrentAnswer={setCurrentAnswer} currentAnswer={currentAnswer} data={data} setIsDisabled={setIsDisabled} isDisabled={isDisabled} nextFunction={next} />\r\n\r\n                            {message}\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nQuiz.propTypes = {\r\n    dataCategories: PropTypes.array,\r\n    data: PropTypes.array,\r\n    setData: PropTypes.func,\r\n    isError: PropTypes.bool,\r\n    setIsError: PropTypes.func,\r\n    isLoading: PropTypes.bool,\r\n    setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default Quiz\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>ERROR 404 - Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Category = ({ dataCategories, setAddCategory, setCategoryId, renderInputNewCategory }) => {\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n\r\n            <label>Categoría</label>\r\n            <select\r\n                type=\"text\"\r\n                className=\"admin-input\"\r\n                name=\"categoryId\"\r\n                onChange={(e) => {\r\n                    setCategoryId(e.target.value);\r\n                }} >\r\n\r\n                <option value=\"\" name=\"categoryId\"></option>\r\n\r\n                {dataCategories.map(category => {\r\n                    return (\r\n                        <option\r\n                            key={category.id}\r\n                            name=\"categoryId\"\r\n                            value={category.id}>\r\n\r\n                            {category.id}-{category.name}\r\n\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n\r\n            <button\r\n                className=\"btn admin-btn-category\"\r\n                onClick={() => setAddCategory(true)}>\r\n                <FaPlusCircle /> Nueva\r\n            </button>\r\n\r\n            {renderInputNewCategory()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nCategory.propTypes = {\r\n    dataCategories: PropTypes.array,\r\n    setAddCategory: PropTypes.func,\r\n    setCategoryId: PropTypes.func,\r\n    renderInputNewCategory: PropTypes.func\r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst NewQuestion = ({ setQuestion }) => {\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n            <label className=\"mt-5\">Pregunta</label>\r\n            <input type=\"text\" name=\"question\" className=\"admin-input\" placeholder=\"¿Ejemplo?\"\r\n                onChange={(e) => setQuestion(e.target.value)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nNewQuestion.propTypes = {\r\n    setQuestion: PropTypes.func\r\n}\r\n\r\nexport default NewQuestion\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AnswerOptions = ({ setOptions, options }) => {\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n            <label className=\"mt-5 text-decoration-\">Respuestas</label>\r\n\r\n            <span>A: </span>\r\n            <input\r\n                type=\"text\"\r\n                name=\"A\"\r\n                className=\"admin-input\"\r\n                onChange={(e) => {\r\n                    const { name, value } = e.target;\r\n                    setOptions({ ...options, [name]: value })\r\n                }} />\r\n\r\n            <span>B: </span>\r\n            <input\r\n                type=\"text\"\r\n                name=\"B\"\r\n                className=\"admin-input\"\r\n                onChange={(e) => {\r\n                    const { name, value } = e.target;\r\n                    setOptions({ ...options, [name]: value })\r\n                }} />\r\n\r\n            <span>C: </span>\r\n            <input\r\n                type=\"text\"\r\n                name=\"C\"\r\n                className=\"admin-input\"\r\n                onChange={(e) => {\r\n                    const { name, value } = e.target;\r\n                    setOptions({ ...options, [name]: value })\r\n                }} />\r\n\r\n            <span>D: </span>\r\n            <input\r\n                type=\"text\"\r\n                name=\"D\"\r\n                className=\"admin-input\"\r\n                onChange={(e) => {\r\n                    const { name, value } = e.target;\r\n                    setOptions({ ...options, [name]: value })\r\n                }} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nAnswerOptions.propTypes = {\r\n    setOptions: PropTypes.func,\r\n    options: PropTypes.object\r\n}\r\n\r\nexport default AnswerOptions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CorrectAnswer = ({ setAnswer }) => {\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n            <label className=\"mt-5\">Respuesta Correcta</label>\r\n            <select\r\n                className=\"admin-input\"\r\n                name=\"answer\"\r\n                onChange={(e) => {\r\n                    setAnswer(e.target.value);\r\n                }} >\r\n                <option value=\" \" name=\"answer\">  </option>\r\n                <option value=\"A\" name=\"answer\">A</option>\r\n                <option value=\"B\" name=\"answer\">B</option>\r\n                <option value=\"C\" name=\"answer\">C</option>\r\n                <option value=\"D\" name=\"answer\">D</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nCorrectAnswer.propTypes = {\r\n    setAnswer: PropTypes.func\r\n}\r\n\r\nexport default CorrectAnswer\r\n","import React, { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport Category from '../Components/Admin/Category';\r\nimport NewQuestion from '../Components/Admin/NewQuestion';\r\nimport AnswerOptions from '../Components/Admin/AnswerOptions';\r\nimport CorrectAnswer from '../Components/Admin/CorrectAnswer';\r\n\r\n\r\nconst Admin = ({ dataCategories, isErrorCategories, isLoadingCategories, data }) => {\r\n\r\n    const [addCategory, setAddCategory] = useState(false);\r\n    const [categoryForm, setCategoryForm] = useState({});\r\n    const [categoryMessage, setCategoryMessage] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [question, setQuestion] = useState({});\r\n    const [options, setOptions] = useState({});\r\n    const [answer, setAnswer] = useState({});\r\n    const [categoryId, setCategoryId] = useState(null);\r\n\r\n\r\n    const handleCategory = (e) => {\r\n        const { name, value } = e.target;\r\n        setCategoryForm({ ...categoryForm, [name]: value });\r\n    };\r\n\r\n    //function to add a new category\r\n    const add = () => {\r\n\r\n        Axios\r\n            .post(\"https://5f280f4ef5d27e001612ea88.mockapi.io/categories\", categoryForm)\r\n            .then((response) => {\r\n                console.log(response);\r\n                setCategoryMessage(\"La categoría se agregó con éxito!\");\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                setCategoryMessage(\"Ocurrió un error\");\r\n            })\r\n\r\n    };\r\n\r\n    // function to add a new question, with its possible options and correct answer.\r\n    const addQuestion = () => {\r\n\r\n        const form = {\r\n            question,\r\n            answer,\r\n            options: {\r\n                ...options,\r\n            }\r\n        };\r\n\r\n        Axios\r\n            .post(`https://5f280f4ef5d27e001612ea88.mockapi.io/categories/${categoryId}/questions`, form)\r\n            .then(response => {\r\n                console.log(response);\r\n                setMessage(\"La pregunta se cargó con éxito!\")\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                setMessage(\"Ocurrió un error\");\r\n            })\r\n\r\n        console.log('completo', form);\r\n        // console.log(`question`, question);\r\n        // console.log(`options`, options);\r\n        // console.log(`answer`, answer);\r\n        // console.log(`Category`, categoryId);\r\n    }\r\n\r\n\r\n    //onClick function to display the necessary inputs for loading a new category\r\n    const renderInputNewCategory = () => {\r\n        if (addCategory) {\r\n            return (\r\n                <div className=\"mt-4 admin-new-category\">\r\n\r\n                    <label htmlFor=\"\" >Ingrese Nueva Categoría</label>\r\n                    <input type=\"text\" name=\"name\" className=\"admin-input\" placeholder=\"Ej: Química\" onChange={handleCategory} />\r\n\r\n                    <label htmlFor=\"\" >Ingrese Img URL</label>\r\n                    <input type=\"text\" name=\"img\" className=\"admin-input\" onChange={handleCategory} />\r\n\r\n                    <label htmlFor=\"\" >Cantidad de preguntas</label>\r\n                    <input type=\"number\" name=\"questions\" className=\"admin-input\" onChange={handleCategory} />\r\n\r\n                    <p className=\"admin-message\">{categoryMessage}</p>\r\n\r\n                    <button className=\"btn admin-btn-category\" onClick={add} >Agregar</button>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {isErrorCategories && (\r\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                    Error 404: Not Found.\r\n                    API error: There was an error please refresh the page and try again.\r\n                </div>\r\n            )}\r\n\r\n\r\n            {isLoadingCategories && (\r\n                <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n            )}\r\n\r\n\r\n            {dataCategories && !isLoadingCategories && !isErrorCategories && (\r\n\r\n                <div className=\"container admin-container mt-3\">\r\n\r\n                    <h2>Formulario</h2>\r\n                    <p className=\"quiz-subtitle\">Nueva Pregunta</p>\r\n                    <div className=\"d-flex flex-column\">\r\n\r\n                        <Category dataCategories={dataCategories} setAddCategory={setAddCategory} setCategoryId={setCategoryId} renderInputNewCategory={renderInputNewCategory} />\r\n\r\n                        <NewQuestion setQuestion={setQuestion} />\r\n\r\n                        <AnswerOptions setOptions={setOptions} options={options} />\r\n\r\n                        <CorrectAnswer setAnswer={setAnswer} />\r\n\r\n                        <p className=\"admin-message\">{message}</p>\r\n\r\n                        <button\r\n                            className=\"btn admin-btn-category admin-btn-category-green mb-4 \"\r\n                            onClick={addQuestion}>\r\n                            Agregar\r\n                                </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nAdmin.propTypes = {\r\n    dataCategories: PropTypes.array,\r\n    isErrorCategories: PropTypes.bool,\r\n    isLoadingCategories: PropTypes.bool,\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default Admin\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <NavLink className=\"m-2 navbar-link\" to=\"/home\"> Home </NavLink>\r\n\r\n            <NavLink className=\"m-2 navbar-link\" to=\"/admin\"> Admin </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from './Routes/Home';\nimport Quiz from './Routes/Quiz';\nimport Error from './Routes/Error';\nimport Admin from './Routes/Admin';\nimport NavBar from './Components/NavBar';\nimport Axios from 'axios';\n\n\nfunction App() {\n\n  const [isErrorCategories, setIsErrorCategories] = useState(false);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  const [dataCategories, setDataCategories] = useState(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n\n    setIsLoadingCategories(true);\n    setIsErrorCategories(false);\n\n    Axios\n\n      .get(`https://5f280f4ef5d27e001612ea88.mockapi.io/categories`)\n\n      .then((response) => {\n        console.log(response.data);\n        setDataCategories(response.data);\n        setIsLoadingCategories(false);\n      })\n\n      .catch(() => {\n        setIsLoadingCategories(false);\n        setIsErrorCategories(true);\n      });\n\n  }, []);\n\n\n  return (\n    <div >\n      <Router>\n        <NavBar />\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Redirect exact from=\"/\" to=\"/home\" />\n          </Route>\n\n          <Route exact path=\"/quiz-app-react\">\n            <Redirect exact from=\"/quiz-app-react\" to=\"/home\" />\n          </Route>\n\n          <Route exact path=\"/home\">\n            <Home dataCategories={dataCategories} />\n          </Route>\n\n          <Route exact path=\"/quiz/:id\">\n            <Quiz dataCategories={dataCategories} isError={isError} setIsError={setIsError} isLoading={isLoading} setIsLoading={setIsLoading} data={data} setData={setData} />\n          </Route>\n\n          <Route exact path=\"/admin\">\n            <Admin dataCategories={dataCategories} isErrorCategories={isErrorCategories} isLoadingCategories={isLoadingCategories} data={data} />\n          </Route>\n\n          <Route>\n            <Error />\n          </Route>\n\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}